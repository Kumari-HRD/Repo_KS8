Vi kubeinstall.sh

#!/bin/bash
# Swap memory
swapoff -a

# Install Docker
sudo apt-get update

sudo apt-get install -y\
    apt-transport-https \
    ca-certificates \
    curl \
    software-properties-common

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

sudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"

sudo apt-get update
sudo apt-get install -y docker-ce docker-ce-cli containerd.io

# Install Kubernetes
sudo apt-get update && sudo apt-get install -y apt-transport-https curl
curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-archive-keyring.gpg
echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt-get update
#sudo apt-get install -y kubelet kubeadm kubectl
sudo apt-get install -y kubelet=1.21.1-00 kubeadm=1.21.1-00 kubectl=1.21.1-00 #--allow-change-held-packages
sudo apt-mark hold kubelet kubeadm kubectl

:wq
### run
sh kubeinstall.sh

Above script did not work. the below code from chatgpt works. So use this next time for Kubernetes installation.
#!/bin/bash

# Swap memory
sudo swapoff -a

# Install Docker
sudo apt-get update
sudo apt-get install -y \
    apt-transport-https \
    ca-certificates \
    curl \
    software-properties-common

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
echo "deb [signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

sudo apt-get update
sudo apt-get install -y docker-ce docker-ce-cli containerd.io

# Install Kubernetes
sudo apt-get update && sudo apt-get install -y apt-transport-https curl gnupg

curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/kubernetes-archive-keyring.gpg
echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list > /dev/null

sudo apt-get update
sudo apt-get install -y kubelet=1.21.1-00 kubeadm=1.21.1-00 kubectl=1.21.1-00
sudo apt-mark hold kubelet kubeadm kubectl

—------------------------------------------------------------------------------------------------------------------------------------------------

##after this run only in master
sudo kubeadm init

# run this commands (generated by init command in master node)
mkdir -p $HOME/.kube                                                                                             
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

# After it will generate token that token will copy and paste it in all worker node
Eg. : sudo kubeadm join 172.31.15.245:6443 --token a5koyo.bhrc83qjhwt4s5gh         --discovery-token-ca-cert-hash sha256:530fae703321782f3c362c5af1055c158265b850b6aa9e14f4b8d3940efcecd6
Eg. from execution by me : 
sudo kubeadm join <control-plane-host>:<control-plane-port> --token <token> --discovery-token-ca-cert-hash <sha256>

To check pods information : kubectl get nodes
 → (in master node - all worker node will be not ready so run CNI plugin in master node)

# CNI Plugin Installation: (run in master node)
 kubectl apply -f https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s.yaml


 kind: Pod
apiVersion: v1
metadata:
  name: flipkart
spec:
  containers:
    - name: sample1
      image: ubuntu
      command: ["/bin/bash", "-c" , "while true; do echo 'Devops Kubernetes'; sleep 5; done"]
